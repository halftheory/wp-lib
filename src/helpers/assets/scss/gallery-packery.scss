@charset 'UTF-8';
@use 'libs/sass' as *;
@use 'libs/libs' as l with ( $handle: 'gallery' );

$breakpoints: sm, md, lg, xl;

.gallery {
	&.#{l.$handle}-gapless {
		&.gallery-columns-{
			@for $columns from 1 through 9 {
				&#{$columns} {
					.gallery-item {
						width: math-percentage(1);
						@each $breakpoint in $breakpoints {
							$grid-value: l.grid-column($columns, $breakpoint);
							@include l.breakpoint(sm) {
								width: math-percentage(math-div(1, $grid-value));
							}
						}
					}
				}
			}
		}
	}
}

.packery-wrapper {
	&.columns-{
		@for $columns from 1 through 9 {
			&#{$columns} {
				.packery-item {
					width: math-percentage(1);
					@each $breakpoint in $breakpoints {
						$grid-value: l.grid-column($columns, $breakpoint);
						@include l.breakpoint(sm) {
							width: math-percentage(math-div(1, $grid-value));
						}
					}
				}
			}
		}
	}
}

@media print {
	.gallery.#{l.$handle}-gapless,
	.packery-wrapper {
		display: grid;
		grid-auto-flow: row;
		position: relative !important;
		width: auto !important;
		height: auto !important;
		.gutter-sizer {
			display: none;
		}
	}
	.gallery.#{l.$handle}-gapless .gallery-item,
	.packery-wrapper .packery-item {
		position: relative !important;
		top: auto !important;
		right: auto !important;
		bottom: auto !important;
		left: auto !important;
		width: auto !important;
	}
	@for $columns from 1 through 9 {
		.gallery.#{l.$handle}-gapless.gallery-columns-#{$columns},
		.packery-wrapper.columns-#{$columns} {
			grid-template-columns: repeat($columns, minmax(0, 1fr));
		}
	}
}
